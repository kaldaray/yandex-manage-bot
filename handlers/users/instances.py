import aiohttp

from io import BytesIO
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import ReplyKeyboardRemove, CallbackQuery, ContentTypes
from pyisemail import is_email

from keyboards.default import helpKeyboard
from keyboards.inline import folderIdKeyboard
from loader import dp
from loader import bot
from states import UsersQuestion


@dp.message_handler(Command("instances"))
async def bot_start(message: types.Message):
    await message.answer(f'{message.from_user.full_name}. –ù–µ–æ–±—Ö–æ–¥–∏–º –≤–∞—à folderid', reply_markup=ReplyKeyboardRemove())
    await message.answer("–ü—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è folderid", reply_markup=folderIdKeyboard)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await UsersQuestion.whats_the_problem.set()


@dp.message_handler(text="–ó–∞–ø—Ä–æ—Å –≤ –¢–ü üßë‚Äçüíª")
async def bot_start(message: types.Message):
    await message.answer(f'{message.from_user.full_name}. –ù–µ–æ–±—Ö–æ–¥–∏–º –≤–∞—à folderid', reply_markup=ReplyKeyboardRemove())
    await message.answer("–ü—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è folderid", reply_markup=folderIdKeyboard)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await UsersQuestion.whats_the_problem.set()


# –û—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ 2
@dp.message_handler(state=UsersQuestion.whats_the_problem)
async def bot_start(message: types.Message, state: FSMContext):
    wh_th_problem = message.text
    await state.update_data(answer1=wh_th_problem)
    await message.answer(f'{message.from_user.full_name}, –æ–ø–∏—à–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º.')
    await message.answer('–ü—Ä–æ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–ø—Ä–æ—à—É –¥–∞–ª—å—à–µ')
    await UsersQuestion.description_problem.set()


@dp.message_handler(text="–ï—Å—Ç—å", state=UsersQuestion)
async def cancel_request(message: types.Message):
    await message.answer("–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ", reply_markup=ReplyKeyboardRemove())
    await UsersQuestion.photo_problem.set()


@dp.message_handler(text="–ù–µ—Ç", state=UsersQuestion)
async def cancel_request(message: types.Message, state: FSMContext):
    await state.update_data(photo="None")
    await message.answer(f'{message.from_user.full_name}, –æ—Å—Ç–∞–≤—å —Å–≤–æ–µ email!', reply_markup=ReplyKeyboardRemove())
    await state.update_data(answer3=message.chat.full_name)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await UsersQuestion.email_of_the_applicant.set()
